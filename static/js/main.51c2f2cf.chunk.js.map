{"version":3,"sources":["components/app-header/app-header.jsx","components/search-panel/search-panel.jsx","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/item-status-filter/item-status-filter.jsx","components/item-add-form/item-add-form.jsx","components/app/app.jsx","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","search","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleDone","onToggleImportant","important","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_TodoListItem","assign","ItemStatusFilter","buttons","name","AddNewItem","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","filter","deleteItem","idx","findIndex","el","concat","toConsumableArray","slice","_ref2","defaultValue","_ref3","toggleProperty","_ref4","arr","propName","oldItem","newItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","doneCount","todoCount","visibleItems","searchField","app_header_app_header","search_panel_SearchPanel","item_status_filter_ItemStatusFilter","todo_list_todo_list","item_add_form_AddNewItem","ReactDOM","render","app_App","document","getElementById"],"mappings":"iXAYeA,SATG,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,KACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,gBAAwBC,EAAxB,YCHeK,oNAEjBC,MACI,CACIC,OAAQ,MAGZC,eAAe,SAACC,GACd,IAAMF,EAASE,EAAEC,OAAOC,MACxBC,EAAKC,SAAS,CAACN,WACfK,EAAKE,MAAMN,eAAeD,4EAK5B,OAAQN,EAAAC,EAAAC,cAAA,SACJY,KAAK,OACLX,UAAU,4BACVY,YAAY,iBACZL,MAASM,KAAKX,MAAMC,OACpBW,SAAUD,KAAKT,wBApBcW,sBCApBC,0LAER,IAAAC,EAEuEJ,KAAKH,MAA1EQ,EAFFD,EAEEC,MAAOC,EAFTF,EAESE,UAAWC,EAFpBH,EAEoBG,aAAcC,EAFlCJ,EAEkCI,kBAEnCrB,EAAY,iBAShB,OAbKiB,EAEoDrB,OAIrDI,GAAa,SANZiB,EAE0DK,YAQ7DtB,GAAa,cAIXH,EAAAC,EAAAC,cAAA,QAAMC,UAAWA,GACbH,EAAAC,EAAAC,cAAA,QACIC,UAAU,uBAEVuB,QAASH,GACRF,GAGLrB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAASX,UAAU,6CAA6CuB,QAASF,GAClFxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGjBH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAASX,UAAU,4CAA4CuB,QAASJ,GACjFtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BA7BSe,cC0B3BS,SAzBE,SAAA9B,GAAyD,IAAvD+B,EAAuD/B,EAAvD+B,MAAON,EAAgDzB,EAAhDyB,UAAUC,EAAsC1B,EAAtC0B,aAAcC,EAAwB3B,EAAxB2B,kBAExCK,EAAWD,EAAME,IAAI,SAACC,GAAS,IAE7BC,EAEAD,EAFAC,GACGC,EAH0BC,OAAAC,EAAA,EAAAD,CAI7BH,EAJ6B,QAMjC,OACI/B,EAAAC,EAAAC,cAAA,MAAIkC,IAAKJ,EAAI7B,UAAU,mBACnBH,EAAAC,EAAAC,cAACmC,EAADH,OAAAI,OAAA,GAAkBL,EAAlB,CAA8BT,kBAAsB,kBAAKA,EAAkBQ,IAAKT,aAAe,kBAAKA,EAAaS,IAAOV,UAAW,kBAAMA,EAAUU,UAQ/J,OACIhC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACT0B,KCpBQU,oNAGrBC,QAAS,CACP,CAACC,KAAM,MAAOpB,MAAO,OACrB,CAACoB,KAAM,SAAUpB,MAAO,UACxB,CAACoB,KAAM,OAAQpB,MAAO,iFAKpB,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACLX,UAAU,gBADlB,OAEAH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACLX,UAAU,6BADlB,UAEAH,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SACLX,UAAU,6BADlB,gBAjBsCe,cCFzBwB,oNAEpBrC,MAAQ,CACJgB,MAAO,MAKRsB,cAAgB,SAACnC,GACbG,EAAKC,SAAS,CACVS,MAAMb,EAAEC,OAAOC,WAKvBkC,SAAW,SAACpC,GACRA,EAAEqC,iBACFlC,EAAKE,MAAMiC,QAAQnC,EAAKN,MAAMgB,OAC9BV,EAAKC,SAAS,CACVS,MAAM,8EAOV,OAEIrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuByC,SAAU5B,KAAK4B,UAClD5C,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OACZX,UAAU,eACVc,SAAYD,KAAK2B,cACjB5B,YAAc,wBACdL,MAASM,KAAKX,MAAMgB,QAEpBrB,EAAAC,EAAAC,cAAA,UACIY,KAAK,SACLX,UAAU,6BAFd,oBAnCwBe,cCOnB6B,oNAEjBC,MAAQ,IAER3C,MAAQ,CACJ4C,SAAU,CACNtC,EAAKuC,eAAe,gBACpBvC,EAAKuC,eAAe,oBACpBvC,EAAKuC,eAAe,iBAExB5C,OAAO,GACP6C,OAAO,YAYXC,WAAa,SAACpB,GACVrB,EAAKC,SAAS,SAAAf,GAAgB,IAAdoD,EAAcpD,EAAdoD,SACNI,EAAMJ,EAASK,UAAU,SAAAC,GAAE,OAAIA,EAAGvB,KAAOA,IAK/C,MAAO,CAACiB,SAJM,GAAAO,OAAAtB,OAAAuB,EAAA,EAAAvB,CACPe,EAASS,MAAM,EAAGL,IADXnB,OAAAuB,EAAA,EAAAvB,CAEPe,EAASS,MAAML,EAAM,WAOpCP,QAAU,SAACzB,GAGPV,EAAKC,SAAS,SAAA+C,GAAgB,IAAdV,EAAcU,EAAdV,SACNW,EAAe,CAACjD,EAAKuC,eAAe7B,IAK1C,MAAO,CAAC4B,SAJQ,GAAAO,OAAAtB,OAAAuB,EAAA,EAAAvB,CACTe,GACAW,SAsBfpC,kBAAoB,SAACQ,GAClBrB,EAAKC,SAAS,SAAAiD,GAAgB,IAAdZ,EAAcY,EAAdZ,SACf,MAAO,CAACA,SAAUtC,EAAKmD,eAAeb,EAASjB,EAAG,mBAItDT,aAAe,SAACS,GACZrB,EAAKC,SAAS,SAAAmD,GAAgB,IAAdd,EAAcc,EAAdd,SACZ,MAAO,CAACA,SAAUtC,EAAKmD,eAAeb,EAASjB,EAAG,cAkBtDzB,eAAiB,SAACD,GAGdK,EAAKC,SAAS,CAACN,0FA/ERe,GACX,MAAO,CACHA,QACAI,WAAW,EACX1B,MAAM,EACNiC,GAAIhB,KAAKgC,gDA6BFgB,EAAKhC,EAAIiC,GAEtB,IAAMZ,EAAMW,EAAIV,UAAU,SAACC,GAAD,OAAQA,EAAGvB,KAAOA,IAChCkC,EAAUF,EAAIX,GACdc,EAAOjC,OAAAkC,EAAA,EAAAlC,CAAA,GACNgC,EADMhC,OAAAmC,EAAA,EAAAnC,CAAA,GAER+B,GAAYC,EAAQD,KAEzB,SAAAT,OAAAtB,OAAAuB,EAAA,EAAAvB,CACO8B,EAAIN,MAAM,EAAGL,IADpB,CAEIc,GAFJjC,OAAAuB,EAAA,EAAAvB,CAGO8B,EAAIN,MAAML,EAAM,yCAkBlBiB,EAAOhE,GAEhB,OAAqB,IAAjBA,EAAOiE,OACAD,EAGJA,EAAMnB,OAAO,SAACpB,GACjB,OAAOA,EAAKV,MAAMmD,cAAcC,QAAQnE,EAAOkE,gBAAkB,mCAYjEF,EAAOnB,GAEX,OAAOA,GACH,IAAK,MACD,OAAOmB,EACX,IAAK,SACD,OAAOA,EAAMnB,OAAO,SAACpB,GAAD,OAAWA,EAAKhC,OACxC,IAAK,OACD,OAAOuE,EAAMnB,OAAO,SAACpB,GAAD,OAAUA,EAAKhC,OACvC,QACI,OAAOuE,oCAIV,IAAAI,EAE6B1D,KAAKX,MAAhC4C,EAFFyB,EAEEzB,SAAU3C,EAFZoE,EAEYpE,OAAO6C,EAFnBuB,EAEmBvB,OAEpBwB,EAAY1B,EAASE,OAAO,SAACI,GAAD,OAAQA,EAAGxD,OAAMwE,OAC7CK,EAAY3B,EAASE,OAAO,SAACI,GAAD,OAAkB,IAAVA,EAAGxD,OAAcwE,OAErDM,EAAe7D,KAAKmC,OAAOnC,KAAK8D,YAAY7B,EAAU3C,GAAQ6C,GAElE,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAWjF,KAAM8E,EAAW7E,KAAM4E,IAClC3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC8E,EAAD,CAAczE,eAAkBS,KAAKT,iBACrCP,EAAAC,EAAAC,cAAC+E,EAAD,OAGJjF,EAAAC,EAAAC,cAACgF,EAAD,CACItD,MAAOiD,EACPvD,UAAWN,KAAKoC,WAChB5B,kBAAmBR,KAAKQ,kBACxBD,aAAcP,KAAKO,eACvBvB,EAAAC,EAAAC,cAACiF,EAAD,CAAYrC,QAAS9B,KAAK8B,kBApIT5B,cCLjCkE,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MACdC,SAASC,eAAe","file":"static/js/main.51c2f2cf.chunk.js","sourcesContent":["import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n    state = \n        {\n            search: \"\"\n        };\n    \n        onSearchChange=(e)=>{\n          const search = e.target.value\n          this.setState({search});\n          this.props.onSearchChange(search);\n        }\n  \n    render() {\n\n        return (<input\n            type=\"text\"\n            className=\"form-control search-input\"\n            placeholder=\"type to search\"\n            value = {this.state.search}\n            onChange={this.onSearchChange}\n            />);\n\n    };\n};","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n\n        const {label, onDeleted, onToggleDone, onToggleImportant,done, important} = this.props;\n        \n        let className = 'todo-list-item';\n        if (done) {\n            className += \" done\";\n        }\n\n        if (important){\n          className += ' important'\n        }\n\n        return (\n            <span className={className}>\n                <span\n                    className=\"todo-list-item-label\"\n                    \n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\" onClick={onToggleImportant}>\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={onDeleted}>\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n            </span>\n        );\n    };\n};\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleted,onToggleDone, onToggleImportant }) => {\n\n    const elements = todos.map((item) => {\n        const {\n            id,\n            ...itemProps\n        } = item;\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem {...itemProps } onToggleImportant = { () =>onToggleImportant(id)} onToggleDone={ ()=> onToggleDone(id) }  onDeleted={() => onDeleted(id)}\n                \n                \n                />\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","\nimport React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component{\n\n\nbuttons =[\n  {name: 'all', label: \"All\"},\n  {name: 'active', label: \"Active\"},\n  {name: 'done', label: \"Done\"}\n]\n\n  render(){\n// const buttons = this.buttons.map(({name,label}) => )  \n    return (\n      <div className=\"btn-group\">\n        <button type=\"button\"\n                className=\"btn btn-info\">All</button>\n        <button type=\"button\"\n                className=\"btn btn-outline-secondary\">Active</button>\n        <button type=\"button\"\n                className=\"btn btn-outline-secondary\">Done</button>\n      </div>\n    );\n  };\n};\n\n\n\n\n","import React, {Component} from 'react';\nimport './item-add-form.css';\n\nexport default class AddNewItem extends Component {\n\n state = {\n     label: ''\n };\n\n\n\n    onLabelChange = (e) => {\n        this.setState({\n            label:e.target.value\n        })\n        \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addItem(this.state.label);\n        this.setState({\n            label:''\n        })\n    }\n\n\n    render() {\n\n        return (\n\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n                <input type=\"text\" \n                className=\"form-control\"\n                onChange = {this.onLabelChange}\n                placeholder = \"What needs to be done\"\n                value = {this.state.label}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-secondary\">\n                    Add Task</button>\n\n            </form>\n        )\n\n    }\n}","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\nimport AddNewItem from '../item-add-form/item-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 0;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        search:'',\n        filter:'active'\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex(el => el.id === id)\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ]\n            return {todoData: newArray}\n\n        })\n    }\n\n    addItem = (label) => {\n        \n        \n        this.setState(({todoData}) => {\n            const defaultValue = [this.createTodoItem(label)]\n            const updatedSet = [\n                ...todoData,\n                ...defaultValue\n            ]\n            return {todoData: updatedSet}\n        })\n    }\n\n    toggleProperty(arr, id, propName){\n\n      const idx = arr.findIndex((el) => el.id === id)\n            const oldItem = arr[idx];\n            const newItem = {\n                ...oldItem,\n                [propName]: !oldItem[propName]\n            };\n            return [\n                ...arr.slice(0, idx),\n                newItem,\n                ...arr.slice(idx + 1)\n            ];\n\n    }\n\n    onToggleImportant = (id) => {\n       this.setState(({todoData}) => {\n        return {todoData: this.toggleProperty(todoData,id,'important')}\n       })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {  \n            return {todoData: this.toggleProperty(todoData,id,'done')}\n        })\n\n    }\n\n    searchField (items, search){\n        \n        if (search.length ===0) {\n            return items;\n        }\n        \n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n        });\n\n\n        }\n\n        onSearchChange = (search)=> {\n            \n\n            this.setState({search});\n        };\n\n    filter (items, filter) {\n\n        switch(filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n\n        const {todoData, search,filter} = this.state;\n\n      const doneCount = todoData.filter((el) => el.done).length;\n      const todoCount = todoData.filter((el) => el.done===false).length\n      \n      const visibleItems = this.filter(this.searchField(todoData, search),filter);\n      \n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel  onSearchChange = {this.onSearchChange}/>\n                    <ItemStatusFilter/>\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}/>\n                <AddNewItem addItem={this.addItem}/>\n\n            </div>\n        );\n    };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}